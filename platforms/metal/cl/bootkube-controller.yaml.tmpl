---
systemd:
  units:
    - name: etcd-member.service
      enable: {{.etcd_enabled}}
      dropins:
        - name: 40-etcd-cluster.conf
          contents: |
            [Service]
            Environment="ETCD_IMAGE_TAG={{.etcd_image_tag}}"
            Environment="ETCD_NAME={{.etcd_name}}"
            Environment="ETCD_ADVERTISE_CLIENT_URLS={{.etcd_scheme}}://{{.domain_name}}:2379"
            Environment="ETCD_INITIAL_ADVERTISE_PEER_URLS={{.etcd_scheme}}://{{.domain_name}}:2380"
            Environment="ETCD_LISTEN_CLIENT_URLS={{.etcd_scheme}}://0.0.0.0:2379"
            Environment="ETCD_LISTEN_PEER_URLS={{.etcd_scheme}}://0.0.0.0:2380"
            Environment="ETCD_INITIAL_CLUSTER={{.etcd_initial_cluster}}"
            Environment="ETCD_STRICT_RECONFIG_CHECK=true"
{{ if eq .etcd_tls_enabled "1" }}
            Environment="ETCD_SSL_DIR=/etc/ssl/etcd"
            Environment="ETCD_CERT_FILE=/etc/ssl/certs/server.crt"
            Environment="ETCD_KEY_FILE=/etc/ssl/certs/server.key"
            Environment="ETCD_PEER_CERT_FILE=/etc/ssl/certs/peer.crt"
            Environment="ETCD_PEER_KEY_FILE=/etc/ssl/certs/peer.key"
            Environment="ETCD_PEER_TRUSTED_CA_FILE=/etc/ssl/certs/ca.crt"
            Environment="ETCD_PEER_CLIENT_CERT_AUTH=true"
{{ end }}
    - name: docker.service
      enable: true
      dropins:
        - name: 10-dockeropts.conf
          contents: {{.ign_docker_dropin_json}}
    - name: locksmithd.service
      mask: true
    - name: kubelet.path
      enable: true
      contents: |
        [Unit]
        Description=Watch for kubeconfig
        [Path]
        PathExists=/etc/kubernetes/kubeconfig
        [Install]
        WantedBy=multi-user.target
    - name: wait-for-dns.service
      enable: true
      contents: |
        [Unit]
        Description=Wait for DNS entries
        Wants=systemd-resolved.service
        Before=kubelet.service
        [Service]
        Type=oneshot
        RemainAfterExit=true
        ExecStart=/bin/sh -c 'while ! /usr/bin/grep '^[^#[:space:]]' /etc/resolv.conf > /dev/null; do sleep 1; done'
        [Install]
        RequiredBy=kubelet.service
    - name: kubelet.service
      contents: {{.ign_kubelet_service_json}}
    - name: bootkube.service
      contents: |
        [Unit]
        Description=Bootstrap a Kubernetes cluster
        ConditionPathExists=!/opt/tectonic/init_bootkube.done
        [Service]
        Type=oneshot
        RemainAfterExit=true
        WorkingDirectory=/opt/tectonic
        User=root
        Group=root
        ExecStart=/usr/bin/bash /opt/tectonic/bootkube.sh
        ExecStartPost=/bin/touch /opt/tectonic/init_bootkube.done
        [Install]
        WantedBy=multi-user.target
    - name: update-ca-certificates.service
      enable: true
      dropins:
        - name: 10-alwaysrun.conf
          contents: ${{.ign_update_ca_certificates_dropin_json}}

{{ if eq .exclude_tectonic "0" }}
    - name: tectonic.service
      contents: |
        [Unit]
        Description=Bootstrap a Tectonic cluster
        ConditionPathExists=!/opt/tectonic/init_tectonic.done
        Requires=bootkube.service
        After=bootkube.service
        [Service]
        Type=oneshot
        RemainAfterExit=true
        WorkingDirectory=/opt/tectonic
        User=root
        Group=root
        ExecStart=/usr/bin/bash /opt/tectonic/tectonic-rkt.sh
        ExecStartPost=/bin/touch /opt/tectonic/init_tectonic.done
        [Install]
        WantedBy=multi-user.target
{{end}}
storage:
  files:
    - path: /etc/kubernetes/kubelet.env
      filesystem: root
      mode: 0644
      contents:
        inline: {{.ign_kubelet_env_json}}
    - path: /etc/hostname
      filesystem: root
      mode: 0644
      contents:
        inline:
          {{.domain_name}}
    - path: /etc/sysctl.d/max-user-watches.conf
      filesystem: root
      mode: 0644
      contents:
        inline: {{.ign_max_user_watches_json}}
    - path: /etc/ssl/certs/kube_ca.pem
      filesystem: root
      mode: 0400
      contents:
        inline: {{.ign_kube_ca_json}}
passwd:
  users:
    - name: core
      ssh_authorized_keys:
        - {{.ssh_authorized_key}}
