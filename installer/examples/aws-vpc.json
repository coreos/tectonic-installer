{
  "clusterKind": "tectonic-aws",
  "dryRun": false,
  "cluster": {
    "accessKeyID": "awsAccessKeyId",
    "secretAccessKey": "awsSecretAccessKey",
    "sessionToken": "awsSessionToken",
    "cloudForm": {
      "clusterName": "test",
      "controllerCount": 1,
      "controllerDomain": "test-k8s.example.com",
      "controllerInstanceType": "t2.large",
      "controllerRootVolumeSize": 33,
      "controllerRootVolumeType": "gp2",
      "controllerSubnets": [
        {
          "availabilityZone": "us-west-1a",
          "id": "subnet-9a7dcafd"
        },
        {
          "availabilityZone": "us-west-1b",
          "id": "subnet-43ef260a"
        },
        {
          "availabilityZone": "us-west-1c",
          "id": "subnet-1ad7e242"
        }
      ],
      "externalETCDClient": "",
      "elbScheme": "internet-facing",
      "hostedZoneID": "asfd",
      "keyName": "some-ssh-key",
      "kmsKeyARN": "arn:aws:kms:us-west-1:477645798544:key/thekey",
      "region": "us-west-1",
      "tectonicDomain": "test.example.com",
      "vpcID": "someVPCID",
      "podCIDR": "10.2.0.0/16",
      "serviceCIDR": "10.3.0.0/24",
      "etcdCount": 3,
      "etcdInstanceType": "t2.large",
      "etcdRootVolumeSize": 300,
      "etcdRootVolumeType": "gp2",
      "tags": [
        {
          "key": "test_tag",
          "value": "testing"
        }
      ],
      "workerCount": 3,
      "workerInstanceType": "t2.medium",
      "workerRootVolumeIOPS": 1500,
      "workerRootVolumeSize": 1000,
      "workerRootVolumeType": "io1",
      "workerSubnets": [
        {
          "availabilityZone": "us-west-1a",
          "id": "subnet-277ccb40"
        },
        {
          "availabilityZone": "us-west-1b",
          "id": "subnet-19ef2650"
        },
        {
          "availabilityZone": "us-west-1c",
          "id": "subnet-36d7e26e"
        }
      ],
      "channel": "stable"
    },
    "tectonic": {
      "ingressKind": "NodePort",
      "identityAdminUser": "admin@example.com",
      "identityAdminPassword": "UEFTU1dPUkQ=",
      "license": "<TECTONIC_LICENSE>",
      "dockercfg": "<TECTONIC_PULL_SECRET>",
      "updater": {
        "enabled": true
      }
    }
  }
}
