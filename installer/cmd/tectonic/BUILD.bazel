load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "main.go",
    ],
    importpath = "github.com/coreos/tectonic-installer/installer/cmd/tectonic",
    visibility = ["//visibility:private"],
    deps = [
        "//installer/pkg/workflow:go_default_library",
        "//installer/vendor/gopkg.in/alecthomas/kingpin.v2:go_default_library",
    ],
)

go_binary(
    name = "tectonic",
    embed = [":go_default_library"],
    importpath = "github.com/coreos/tectonic-installer/installer/cmd/tectonic",
    # Use pure to build a pure-go binary.
    # This has the nice side effect of making the binary statically linked.
    pure = "on",
    visibility = ["//visibility:public"],
)

go_binary(
    name = "darwin",
    basename = "tectonic",
    embed = [":go_default_library"],
    importpath = "github.com/coreos/tectonic-installer/installer/cmd/tectonic",
    # Use pure to build a pure-go binary.
    # This has the nice side effect of making the binary statically linked.
    pure = "on",
    goos = "darwin",
    goarch = "amd64",
    visibility = ["//visibility:public"],
)

go_binary(
    name = "linux",
    basename = "tectonic",
    embed = [":go_default_library"],
    importpath = "github.com/coreos/tectonic-installer/installer/cmd/tectonic",
    # Use pure to build a pure-go binary.
    # This has the nice side effect of making the binary statically linked.
    pure = "on",
    goos = "linux",
    goarch = "amd64",
    visibility = ["//visibility:public"],
)
