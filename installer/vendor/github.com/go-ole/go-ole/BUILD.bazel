load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "com_func.go",
        "connect.go",
        "constants.go",
        "error.go",
        "error_func.go",
        "guid.go",
        "iconnectionpoint.go",
        "iconnectionpoint_func.go",
        "iconnectionpointcontainer.go",
        "iconnectionpointcontainer_func.go",
        "idispatch.go",
        "idispatch_func.go",
        "ienumvariant.go",
        "ienumvariant_func.go",
        "iinspectable.go",
        "iinspectable_func.go",
        "iprovideclassinfo.go",
        "iprovideclassinfo_func.go",
        "itypeinfo.go",
        "itypeinfo_func.go",
        "iunknown.go",
        "iunknown_func.go",
        "ole.go",
        "safearray.go",
        "safearray_func.go",
        "safearrayconversion.go",
        "utility.go",
        "variant.go",
        "vt_string.go",
        "winrt_doc.go",
    ] + select({
        "@io_bazel_rules_go//go/platform:darwin_amd64": [
            "variant_amd64.go",
        ],
        "@io_bazel_rules_go//go/platform:linux_amd64": [
            "variant_amd64.go",
        ],
        "@io_bazel_rules_go//go/platform:windows_amd64": [
            "com.go",
            "error_windows.go",
            "iconnectionpoint_windows.go",
            "iconnectionpointcontainer_windows.go",
            "idispatch_windows.go",
            "ienumvariant_windows.go",
            "iinspectable_windows.go",
            "iprovideclassinfo_windows.go",
            "itypeinfo_windows.go",
            "iunknown_windows.go",
            "safearray_windows.go",
            "safearrayslices.go",
            "variables.go",
            "variant_amd64.go",
            "winrt.go",
        ],
        "//conditions:default": [],
    }),
    importpath = "github.com/go-ole/go-ole",
    visibility = ["//visibility:public"],
)
