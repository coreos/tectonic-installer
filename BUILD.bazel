load("//bazel-rules:gen_test.bzl", "gen_test")
load("//:version.bzl", "TECTONIC_VERSION")

package(
    default_visibility = ["//visibility:public"],
)

config_setting(
    name = "darwin",
    values = {"cpu": "darwin"},
    visibility = ["//visibility:public"],
)

config_setting(
    name = "linux",
    values = {"cpu": "k8"}, # don't ask...
    visibility = ["//visibility:public"],
)

genrule(
    name = "terraform_runtime_fmt",
    output_to_bindir = 1,
    srcs = select({
        "//:linux": ["@terraform_runtime_linux//:terraform"],
        "//:darwin": ["@terraform_runtime_darwin//:terraform"],
    }),
    outs = ["bin/terraform"],
    cmd = "cp $(<) $(@)",
    executable = True,
)

load("@io_bazel_rules_go//go:def.bzl", "go_prefix")

go_prefix("github.com/coreos/tectonic-installer")

load("@bazel_gazelle//:def.bzl", "gazelle")

gazelle(
    name = "gazelle",
    command = "fix",
    prefix = "github.com/coreos/tectonic-installer",
    external = "vendored",
)

alias(
    name = "smoke_tests",
    actual = "//tests/smoke:smoke",
)

alias(
    name = "cli",
    actual = "//installer:tectonic",
)

template_files = glob([
    "modules/**/*",
    "steps/**/*",
    "config.tf"
])

exports_files(template_files)

filegroup(
    name = "template_resources",
    srcs = template_files
)

load("@bazel_tools//tools/build_defs/pkg:pkg.bzl", "pkg_tar")

alias(
    name = "tarball",
    actual = ":tectonic-%s" % TECTONIC_VERSION
)

pkg_tar(
    name = "tectonic-%s" % TECTONIC_VERSION,
    strip_prefix = '.',
    package_dir = "tectonic-%s" % TECTONIC_VERSION,
    extension = "tar.gz",
    srcs = [
        "//installer:tectonic",
        "//:template_resources",
        "//examples:tectonic_cli_examples",
    ],
    deps = [":tf_bin"]
)

filegroup (
    name = "terraform_runtime",
    srcs = select({
        "//:linux": ["@terraform_runtime_linux//:terraform"],
        "//:darwin": ["@terraform_runtime_darwin//:terraform"],
    })
)

pkg_tar(
    name = "tf_bin",
    package_dir = "installer",
    srcs = [":terraform_runtime"]
)

filegroup(
    name = "terraform_files",
    srcs = glob(
        ["modules/**/*.tf"],
        exclude_directories=1,
    ) + glob(
        ["steps/**/*.tf"],
        exclude_directories=1,
    ) + ["config.tf"],
)

gen_test(
    name = "terraform_fmt",
    command = "./bin/terraform fmt -list -check -write=false",
    deps = [":terraform_runtime_fmt", ":terraform_files"],
    size = "small",
)
