package(
    default_visibility = ["//visibility:public"],
)

template_files = glob([
    "modules/**/*",
    "platforms/**/*",
])

config_setting(
    name = "darwin",
    values = {"cpu": "darwin"},
    visibility = ["//visibility:public"],
)

config_setting(
    name = "linux",
    values = {"cpu": "k8"}, # don't ask...
    visibility = ["//visibility:public"],
)

genrule(
    name = "terraform_runtime",
    output_to_bindir = 1,
    srcs = select({
        "//:linux": ["@terraform_runtime_linux//:terraform"],
        "//:darwin": ["@terraform_runtime_darwin//:terraform"],
    }),
    outs = ["bin/terraform"],
    cmd = "cp $(<) $(@)",
)

genrule(
    name = "provider_matchbox",
    output_to_bindir = 1,
    srcs =  select({
        "//:linux": ["@terraform_provider_matchbox_linux//:terraform-provider-matchbox"],
        "//:darwin": ["@terraform_provider_matchbox_darwin//:terraform-provider-matchbox"],
    }),
    outs = ["bin/terraform-provider-matchbox"],
    cmd = "cp $(<) $(@)",
)

PLATFORMS = ["aws", "azure", "gcp", "govcloud", "metal", "openstack/neutron", "vmware"]

[genrule(
    name = "examples_" + platform,
    message = "Compiling examples for " + platform + "...",
    srcs = ["platforms/" + platform + "/variables.tf", "config.tf"],
    outs = ["examples/terraform.tfvars." + platform],
    cmd = "$(location //contrib/terraform-examples:terraform-examples) $(location :config.tf) $(location :platforms/" + platform + "/variables.tf) > $@",
    tools = ["//contrib/terraform-examples:terraform-examples"],
) for platform in PLATFORMS]

# DOCS is a dict of tuples matching ["name": ("src", "out"), ...].
DOCS = {p: ("platforms/" + p + "/variables.tf", "Documentation/variables/" + p + ".md") for p in PLATFORMS}
DOCS["config"] = ("config.tf", "Documentation/variables/config.md")

[genrule(
    name = "docs_" + doc[0],
    message = "Compiling docs for " + doc[0] + "...",
    srcs = [doc[1][0]],
    outs = [doc[1][1]],
    cmd = "echo '<!-- DO NOT EDIT. THIS FILE IS AUTOMATICALLY GENERATED. -->' > $@ && echo '# Terraform variables' >> $@ && $(location @com_github_segmentio_terraform-docs//:terraform-docs) --no-required markdown $(location :" + doc[1][0] + ") >> $@",
    tools = ["@com_github_segmentio_terraform-docs//:terraform-docs"],
) for doc in DOCS.items()]

genrule(
    name = "templates",
    message = "Copying templates...",
    output_to_bindir = 1,
    srcs = template_files,
    outs = ["templates/%s" % f for f in template_files],
    cmd = '\n'.join([
        "for tf_file in $(SRCS); do",
        "target=\"$(@D)/templates/$$(dirname $${tf_file})\"",
        "mkdir -p $${target}",
        "cp $${tf_file} $${target}",
        "done"
    ]),
)

load("@io_bazel_rules_go//go:def.bzl", "go_prefix")

go_prefix("github.com/coreos/tectonic-installer")

load("@bazel_gazelle//:def.bzl", "gazelle")

gazelle(
    name = "gazelle",
    command = "fix",
    prefix = "github.com/coreos/tectonic-installer",
    external = "vendored",
)

alias(
    name = "smoke_tests",
    actual = "//tests/smoke:smoke",
)

alias(
    name = "backend",
    actual = "//installer/cmd/installer:installer",
)
