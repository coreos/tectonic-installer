load("//bazel-rules:gen_test.bzl", "gen_test")

package(
    default_visibility = ["//visibility:public"],
)

config_setting(
    name = "darwin",
    values = {"cpu": "darwin"},
    visibility = ["//visibility:public"],
)

config_setting(
    name = "linux",
    values = {"cpu": "k8"}, # don't ask...
    visibility = ["//visibility:public"],
)

genrule(
    name = "terraform_runtime",
    output_to_bindir = 1,
    srcs = select({
        "//:linux": ["@terraform_runtime_linux//:terraform"],
        "//:darwin": ["@terraform_runtime_darwin//:terraform"],
    }),
    outs = ["bin/terraform"],
    cmd = "cp $(<) $(@)",
    executable = True,
)

genrule(
    name = "provider_matchbox",
    output_to_bindir = 1,
    srcs =  select({
        "//:linux": ["@terraform_provider_matchbox_linux//:terraform-provider-matchbox"],
        "//:darwin": ["@terraform_provider_matchbox_darwin//:terraform-provider-matchbox"],
    }),
    outs = ["bin/terraform-provider-matchbox"],
    cmd = "cp $(<) $(@)",
)

exports_files(["config.tf"])

load("@io_bazel_rules_go//go:def.bzl", "go_prefix")

go_prefix("github.com/coreos/tectonic-installer")

load("@bazel_gazelle//:def.bzl", "gazelle")

gazelle(
    name = "gazelle",
    command = "fix",
    prefix = "github.com/coreos/tectonic-installer",
    external = "vendored",
)

alias(
    name = "smoke_tests",
    actual = "//tests/smoke:smoke",
)

alias(
    name = "cli",
    actual = "//installer/cmd/tectonic:tectonic",
)

load("@bazel_tools//tools/build_defs/pkg:pkg.bzl", "pkg_tar")

# We use a genrule here to combine the tarballs rather than a pkg_tar
# because we want to be able to optionally add a version string to the
# directory name and pkg_tar does not allow for formatted names.
genrule(
    name = "tarball",
    srcs = [
        ":tarball_tectonic_binary_darwin",
        ":tarball_tectonic_binary_linux",
        ":tarball_terraform_configuration",
        ":tarball_terraform_binary_darwin",
        ":tarball_terraform_binary_linux",
        ":tarball_terraform_provider_matchbox_darwin",
        ":tarball_terraform_provider_matchbox_linux",
        ":tarball_examples",
    ],
    outs = ["tectonic.tar.gz"],
    cmd = '\n'.join([
            "VERSION=$${TECTONIC_VERSION:-}",
            "DIR=tectonic",
            "[ ! -z $$VERSION ] && DIR=\"$$DIR\"_\"$$VERSION\"",
            "TMPDIR=$$(mktemp -d)",
            "mkdir $$TMPDIR/$$DIR",
            "for s in $(SRCS); do",
                "tar -C $$TMPDIR/$$DIR --extract --file $$s --strip-components=1",
            "done",
            "tar -C $$TMPDIR --create --gzip --file $@ $$DIR"
    ]),
    output_to_bindir = 1,
)

pkg_tar(
    name = "tarball_terraform_configuration",
    mode = "0644",
    srcs =  glob(["modules/**"]) + glob(["steps/**"]) + ["config.tf"],
    strip_prefix = ".",
)

pkg_tar(
    name = "tarball_tectonic_binary_darwin",
    mode = "0755",
    package_dir = "tectonic-installer/darwin",
    srcs = ["//installer/cmd/tectonic:darwin"],
)

pkg_tar(
    name = "tarball_tectonic_binary_linux",
    mode = "0755",
    package_dir = "tectonic-installer/linux",
    srcs = ["//installer/cmd/tectonic:linux"],
)

pkg_tar(
    name = "tarball_terraform_binary_darwin",
    mode = "0755",
    package_dir = "tectonic-installer/darwin",
    srcs = ["@terraform_runtime_darwin//:terraform"],
)

pkg_tar(
    name = "tarball_terraform_binary_linux",
    mode = "0755",
    package_dir = "tectonic-installer/linux",
    srcs = ["@terraform_runtime_linux//:terraform"],
)

pkg_tar(
    name = "tarball_terraform_provider_matchbox_darwin",
    mode = "0755",
    package_dir = "tectonic-installer/darwin",
    srcs = ["@terraform_provider_matchbox_darwin//:terraform-provider-matchbox"],
)

pkg_tar(
    name = "tarball_terraform_provider_matchbox_linux",
    mode = "0755",
    package_dir = "tectonic-installer/linux",
    srcs = ["@terraform_provider_matchbox_linux//:terraform-provider-matchbox"],
)

pkg_tar(
    name = "tarball_examples",
    package_dir = "examples",
    # As long as we are not auto-generating the tectonic cli configuration
    # examples, make sure to add the manually created once to the tarball.
    srcs = ["//examples:tectonic_cli_configs"],
)

filegroup(
    name = "terraform_files",
    srcs = glob(
        ["modules/**/*.tf"],
        exclude_directories=1,
    ) + glob(
        ["steps/**/*.tf"],
        exclude_directories=1,
    ) + ["config.tf"],
)

gen_test(
    name = "terraform_fmt",
    command = "./bin/terraform fmt -list -check -write=false",
    deps = [":terraform_runtime", ":terraform_files"],
    size = "small",
)
