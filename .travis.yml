---
sudo: required
language: bash
services:
  - docker
env:
  global:
    - BAZEL_IMG="quay.io/coreos/tectonic-builder:bazel-v0.3"
branches:
  only:
    - master
jobs:
  include:
    - stage: Lint & Test
      # Terraform lint
      script: docker run -v $(pwd):/data -t quay.io/coreos/tflint
      # YAML lint
    - script: >
        docker run -t -v $(pwd):/workdir 
        quay.io/coreos/yamllint --config-data 
        '{extends: default, rules: {line-length: {level: warning, max: 120}}}' 
        ./examples/ ./installer/
      # shellcheck
    - script: >
        docker run -v $(pwd):/workdir:ro
        --entrypoint sh quay.io/coreos/shellcheck-alpine:v0.5.0
        -c 'for file in $(find /workdir/ -type f -name "*.sh"); do
        if ! shellcheck --format=gcc $file; then export FAILED=true; fi; done;
        if [ "$FAILED" != "" ]; then exit 1; fi'
      # Go vet
    - script: "docker run -v $PWD:/go/src/github.com/coreos/tectonic-installer -w /go/src/github.com/coreos/tectonic-installer quay.io/coreos/golang-testing go vet ./installer/..."
      # Go lint
    - script: "docker run -v $PWD:$PWD -w $PWD quay.io/coreos/golang-testing golint -set_exit_status installer/..."
      # Terraform tests
    - script: "chmod 0777 $PWD && docker run -v $PWD:$PWD:rw -w $PWD $BAZEL_IMG bazel test terraform_fmt --test_output=all"
      # Installer unit tests
    - script: "chmod 0777 $PWD && docker run -v $PWD:$PWD:rw -w $PWD $BAZEL_IMG bazel test installer:cli_units --test_output=all"
    - stage: Build
      script: "chmod 0777 $PWD && docker run -v $PWD:$PWD:rw -w $PWD $BAZEL_IMG bazel build tarball"
