apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: tectonic-stats-emitter
  namespace: tectonic-system
  labels:
    k8s-app: tectonic-stats-emitter
    component: stats-emitter
spec:
  replicas: 1
  template:
    metadata:
      name: tectonic-stats-emitter
      labels:
        k8s-app: tectonic-stats-emitter
        component: stats-emitter
    spec:
      initContainers:
      # TODO(squat): add backoff to stats-emitter so we don't need init pod.
      - name: tectonic-stats-extender-init
        image: ${stats_extender_image}
        imagePullPolicy: IfNotPresent
        command:
        - /extender
        - --period=0s
        - --license=/etc/tectonic/licenses/license
        - --output=/etc/tectonic/stats/extensions
        - --extension=installerPlatform:$(INSTALLER_PLATFORM)
        - --extension=tectonicUpdaterEnabled:$(TECTONIC_UPDATER_ENABLED)
        - --extension=certificatesStrategy:$(CERTIFICATES_STRATEGY)
        - --extension=initialTectonicVersion:$(INITIAL_TECTONIC_VERSION)
        env:
        - name: INSTALLER_PLATFORM
          valueFrom:
            configMapKeyRef:
              name: tectonic-config
              key: installerPlatform
        - name: CERTIFICATES_STRATEGY
          valueFrom:
            configMapKeyRef:
              name: tectonic-config
              key: certificatesStrategy
        - name: TECTONIC_UPDATER_ENABLED
          valueFrom:
            configMapKeyRef:
              name: tectonic-config
              key: tectonicUpdaterEnabled
        - name: INITIAL_TECTONIC_VERSION
          valueFrom:
            configMapKeyRef:
              name: tectonic-config
              key: tectonicVersion
        volumeMounts:
        - name: tectonic-license-secret
          mountPath: /etc/tectonic/licenses
          readOnly: true
        - name: tectonic-stats
          mountPath: /etc/tectonic/stats
      containers:
      - name: tectonic-stats-emitter
        imagePullPolicy: IfNotPresent
        image: ${stats_emitter_image}
        command:
          - /spartakus
          - volunteer
          - --cluster-id=$(CLUSTER_ID)
          - --database=${stats_url}
          - --extensions=/etc/tectonic/stats/extensions
        env:
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: tectonic-config
              key: clusterID
        volumeMounts:
        - mountPath: /etc/tectonic/stats
          name: tectonic-stats
          readOnly: true
      - name: tectonic-stats-extender
        imagePullPolicy: IfNotPresent
        image: ${stats_extender_image}
        command:
          - /extender
          - --license=/etc/tectonic/licenses/license
          - --output=/etc/tectonic/stats/extensions
          - --extension=installerPlatform:$(INSTALLER_PLATFORM)
          - --extension=tectonicUpdaterEnabled:$(TECTONIC_UPDATER_ENABLED)
          - --extension=certificatesStrategy:$(CERTIFICATES_STRATEGY)
          - --extension=initialTectonicVersion:$(INITIAL_TECTONIC_VERSION)
        env:
        - name: INSTALLER_PLATFORM
          valueFrom:
            configMapKeyRef:
              name: tectonic-config
              key: installerPlatform
        - name: CERTIFICATES_STRATEGY
          valueFrom:
            configMapKeyRef:
              name: tectonic-config
              key: certificatesStrategy
        - name: TECTONIC_UPDATER_ENABLED
          valueFrom:
            configMapKeyRef:
              name: tectonic-config
              key: tectonicUpdaterEnabled
        - name: INITIAL_TECTONIC_VERSION
          valueFrom:
            configMapKeyRef:
              name: tectonic-config
              key: tectonicVersion
        volumeMounts:
        - mountPath: /etc/tectonic/licenses
          name: tectonic-license-secret
          readOnly: true
        - mountPath: /etc/tectonic/stats
          name: tectonic-stats
      volumes:
      - name: tectonic-license-secret
        secret:
          secretName: tectonic-license-secret
      - name: tectonic-stats
        emptyDir: {}
      imagePullSecrets:
      - name: coreos-pull-secret
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
