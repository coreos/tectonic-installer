apiVersion: "extensions/v1beta1"
kind: DaemonSet
metadata:
  name: kube-apiserver
  namespace: kube-system
  labels:
    tier: control-plane
    k8s-app: kube-apiserver
spec:
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        tier: control-plane
        k8s-app: kube-apiserver
      annotations:
        checkpointer.alpha.coreos.com/checkpoint: "true"
        scheduler.alpha.kubernetes.io/critical-pod: ""
    spec:
      containers:
      - name: kube-apiserver
        image: ${hyperkube_image}
        command:
        - /usr/bin/flock
        - /var/lock/api-server.lock
        - /hyperkube
        - apiserver
        - --bind-address=0.0.0.0
        - --secure-port=443
        - --insecure-port=0
        - --advertise-address=${advertise_address}
        - --etcd-servers=${etcd_servers}
        ${etcd_ca_flag}
        ${etcd_cert_flag}
        ${etcd_key_flag}
        - --etcd-quorum-read=true
        - --storage-backend=etcd3
        - --allow-privileged=true
        - --service-cluster-ip-range=${service_cidr}
        - --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota
        - --tls-ca-file=/etc/kubernetes/secrets/ca.crt
        - --tls-cert-file=/etc/kubernetes/secrets/apiserver.crt
        - --tls-private-key-file=/etc/kubernetes/secrets/apiserver.key
        - --kubelet-client-certificate=/etc/kubernetes/secrets/apiserver.crt
        - --kubelet-client-key=/etc/kubernetes/secrets/apiserver.key
        - --service-account-key-file=/etc/kubernetes/secrets/service-account.pub
        - --client-ca-file=/etc/kubernetes/secrets/ca.crt
        - --authorization-mode=RBAC
        - --anonymous-auth=${anonymous_auth}
        - --oidc-issuer-url=${oidc_issuer_url}
        - --oidc-client-id=${oidc_client_id}
        - --oidc-username-claim=${oidc_username_claim}
        - --oidc-groups-claim=${oidc_groups_claim}
        - --oidc-ca-file=/etc/kubernetes/secrets/ca.crt
        - --cloud-provider=${cloud_provider}
        ${cloud_provider_config_flag}
        - --audit-log-path=/var/log/kubernetes/kube-apiserver-audit.log
        - --audit-log-maxage=30
        - --audit-log-maxbackup=3
        - --audit-log-maxsize=100
        volumeMounts:
        - mountPath: /etc/ssl/certs
          name: ssl-certs-host
          readOnly: true
        - mountPath: /etc/kubernetes/secrets
          name: secrets
          readOnly: true
        - mountPath: /etc/kubernetes/cloud
          name: cloud-config
          readOnly: true
        - mountPath: /var/lock
          name: var-lock
          readOnly: false
        - mountPath: /var/log/kubernetes
          name: var-log-kubernetes
          readOnly: false
      hostNetwork: true
      tolerations:
      - key: "CriticalAddonsOnly"
        operator: "Exists"
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      nodeSelector:
        node-role.kubernetes.io/master: ""
      volumes:
      - name: ssl-certs-host
        hostPath:
          path: /usr/share/ca-certificates
      - name: secrets
        secret:
          secretName: kube-apiserver
      - name: cloud-config
        secret:
          secretName: kube-cloud-cfg
      - name: var-lock
        hostPath:
          path: /var/lock
      - name: var-log-kubernetes
        hostPath:
          path: /var/log/kubernetes
